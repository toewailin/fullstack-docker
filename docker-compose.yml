services:
  # Backend (Node.js)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=admin_panel
      - REDIS_HOST=redis
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    networks:
      - app-network

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network

  # MySQL database
  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=example
      - MYSQL_DATABASE=admin_panel
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  # Redis service
  redis:
    image: redis:latest  # Make sure the image tag is correct
    container_name: redis
    networks:
      - app-network

  # Nginx reverse proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"  # Expose Nginx on port 80
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf  # Mount the Nginx config file into the container
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
